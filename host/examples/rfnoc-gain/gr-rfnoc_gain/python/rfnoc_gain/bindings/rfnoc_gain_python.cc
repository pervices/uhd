/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(1)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(rfnoc_gain.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3bb0f99d63eadb58a2ff22bf8688f0b8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/rfnoc_gain/rfnoc_gain.h>
// pydoc.h is automatically generated in the build directory
#include <rfnoc_gain_pydoc.h>

void bind_rfnoc_gain(py::module& m)
{

    using rfnoc_gain = ::gr::rfnoc_gain::rfnoc_gain;


    py::class_<rfnoc_gain,
               gr::uhd::rfnoc_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<rfnoc_gain>>(m, "rfnoc_gain", D(rfnoc_gain))

        .def(py::init(&rfnoc_gain::make),
             py::arg("graph"),
             py::arg("gain"),
             py::arg("block_args"),
             py::arg("device_select"),
             py::arg("instance"),
             D(rfnoc_gain, make))


        .def("set_gain", &rfnoc_gain::set_gain, py::arg("gain"), D(rfnoc_gain, set_gain))


        .def("get_gain", &rfnoc_gain::get_gain, D(rfnoc_gain, get_gain))

        ;
}
